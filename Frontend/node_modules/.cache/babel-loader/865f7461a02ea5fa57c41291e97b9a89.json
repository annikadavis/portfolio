{"ast":null,"code":"var _jsxFileName = \"/Users/annika/wild-code-school/portfolio/Frontend/src/Uploader2.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = []; // list allow mime type\n\n      const types = [\"image/png\", \"image/jpeg\", \"image/gif\"]; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container\n          err[x] = files[x].type + \" is not a supported format\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files;\n\n      if (files.length > 3) {\n        const msg = \"Only 3 images can be uploaded at a time\";\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 2000000;\n      let err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      for (var x = 0; x < this.state.selectedFile.length; x++) {\n        data.append(\"file\", this.state.selectedFile[x]);\n      }\n\n      axios.post(\"http://localhost:8000/upload\", data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        // then print response status\n        toast.success(\"upload success\");\n      }).catch(err => {\n        // then print response status\n        toast.error(\"upload fail\");\n      });\n    };\n\n    this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"offset-md-3 col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group files\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Your File \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              class: \"form-control\",\n              multiple: true,\n              onChange: this.onChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              max: \"100\",\n              color: \"success\",\n              value: this.state.loaded,\n              children: [Math.round(this.state.loaded, 2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-success btn-block\",\n            onClick: this.onClickHandler,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/annika/wild-code-school/portfolio/Frontend/src/Uploader2.js"],"names":["React","Component","axios","Progress","ToastContainer","toast","App","constructor","props","checkMimeType","event","files","target","err","types","x","length","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","setState","selectedFile","loaded","onClickHandler","data","FormData","state","append","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","render","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      loaded: 0,\n    };\n  }\n  checkMimeType = (event) => {\n    //getting file object\n    let files = event.target.files;\n    //define message container\n    let err = [];\n    // list allow mime type\n    const types = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n      // compare file type find doesn't matach\n      if (types.every((type) => files[x].type !== type)) {\n        // create error message and assign to container\n        err[x] = files[x].type + \" is not a supported format\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  maxSelectFile = (event) => {\n    let files = event.target.files;\n    if (files.length > 3) {\n      const msg = \"Only 3 images can be uploaded at a time\";\n      event.target.value = null;\n      toast.warn(msg);\n      return false;\n    }\n    return true;\n  };\n  checkFileSize = (event) => {\n    let files = event.target.files;\n    let size = 2000000;\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n      if (files[x].size > size) {\n        err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  onChangeHandler = (event) => {\n    var files = event.target.files;\n    if (\n      this.maxSelectFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      // if return true allow to setState\n      this.setState({\n        selectedFile: files,\n        loaded: 0,\n      });\n    }\n  };\n  onClickHandler = () => {\n    const data = new FormData();\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n      data.append(\"file\", this.state.selectedFile[x]);\n    }\n    axios\n      .post(\"http://localhost:8000/upload\", data, {\n        onUploadProgress: (ProgressEvent) => {\n          this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\n          });\n        },\n      })\n      .then((res) => {\n        // then print response status\n        toast.success(\"upload success\");\n      })\n      .catch((err) => {\n        // then print response status\n        toast.error(\"upload fail\");\n      });\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"offset-md-3 col-md-6\">\n            <div class=\"form-group files\">\n              <label>Upload Your File </label>\n              <input\n                type=\"file\"\n                class=\"form-control\"\n                multiple\n                onChange={this.onChangeHandler}\n              />\n            </div>\n            <div class=\"form-group\">\n              <ToastContainer />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded}>\n                {Math.round(this.state.loaded, 2)}%\n              </Progress>\n            </div>\n\n            <button\n              type=\"button\"\n              class=\"btn btn-success btn-block\"\n              onClick={this.onClickHandler}\n            >\n              Upload\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}